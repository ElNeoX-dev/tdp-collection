---
- name: Install jdbc connector
  package:
    name: "{{ hive_jdbc_connector_package }}"
    state: present

- name: Create a symbolic link to jdbc.jar
  file:
    src: /usr/share/java/{{ hive_jdbc_connector_package }}.jar
    dest: "{{ hive_install_dir }}/lib/{{ hive_jdbc_connector_package }}.jar"
    state: link

- name: Create timestamped configuration directory
  file:
    path: '{{ hive_s2_conf_dir }}.{{ ansible_date_time.epoch }}'
    state: directory
    group: '{{ hadoop_group }}'
    owner: '{{ hive_user }}'

- name: Create symbolic link to timestamped configuration directory
  file:
    src: '{{ hive_s2_conf_dir }}.{{ ansible_date_time.epoch }}'
    dest: '{{ hive_s2_conf_dir }}'
    state: link
    group: '{{ hadoop_group }}'
    owner: '{{ hive_user }}'

- name: Template hive-env.sh
  template:
    src: hive-env.sh.j2
    dest: '{{ hive_s2_conf_dir }}.{{ ansible_date_time.epoch }}/hive-env.sh'

- name: Template hive-log4j2.properties
  template:
    src: hive-log4j2.properties.j2
    dest: '{{ hive_s2_conf_dir }}.{{ ansible_date_time.epoch }}/hive-log4j2.properties'

- name: Template hive-site.xml
  template:
    src: hive-site.xml.j2
    dest: '{{ hive_s2_conf_dir }}.{{ ansible_date_time.epoch }}/hive-site.xml'

- name: Convert cert and key to pk12
  shell: openssl pkcs12 -export -in /etc/ssl/certs/{{ ansible_fqdn }}.pem -inkey /etc/ssl/certs/{{ ansible_fqdn }}.key -out /tmp/{{ ansible_fqdn }}.p12 -name {{ ansible_fqdn }} -CAfile /etc/ssl/certs/root.pem -caname root_ca -password pass:{{ hive_keystore_password }}

- name: Verify if keystore already exists
  stat:
    path: '{{ hive_keystore_location }}'
  register: keystore

- name: Create keystore
  shell: keytool -importkeystore -deststorepass {{ hive_keystore_password }} -destkeypass {{ hive_keystore_password }} -destkeystore {{ hive_keystore_location }} -srckeystore /tmp/{{ ansible_fqdn }}.p12 -srcstoretype PKCS12 -srcstorepass {{ hive_keystore_password }} -alias {{ ansible_fqdn }}
  when: not keystore.stat.exists

- name: Add Certificate Authority to the keystore
  shell: keytool -keystore {{ hive_keystore_location }} -alias root_ca -import -file /etc/ssl/certs/root.pem -storepass {{ hive_keystore_password }} -noprompt
  when: not keystore.stat.exists

- name: Verify if truststore already exists
  stat:
    path: '{{ hive_truststore_location }}'
  register: truststore

- name: Create truststore
  shell: keytool -keystore {{ hive_truststore_location }} -deststorepass {{ hive_truststore_password }} -alias root_ca -import -file /etc/ssl/certs/root.pem -noprompt
  when: not truststore.stat.exists

- name: Generate principals and keytabs
  shell: |
    cd /etc/security/keytabs
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "addprinc -randkey hive/{{ ansible_fqdn }}"
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "xst -k hive.service.keytab hive/{{ ansible_fqdn }}@{{ realm }}"
    chown {{ hive_user }}:{{ hadoop_group }} hive.service.keytab

- name: Generate principals and keytabs for spnego
  shell: |
    cd /etc/security/keytabs
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "addprinc -randkey HTTP/{{ ansible_fqdn }}"
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "xst -k spnego.service.keytab HTTP/{{ ansible_fqdn }}@{{ realm }}"
    chown {{ hive_user }}:{{ hadoop_group }} spnego.service.keytab
    chmod 640 spnego.service.keytab

- name: Template Hiveserver2 service file
  template:
    src: hive-server2.service.j2
    dest: /usr/lib/systemd/system/hive-server2.service

- name: Hive Metastore initSchema
  shell: |
    {{ hive_install_dir }}/bin/hive --config /etc/hive/conf.s2 --service schemaTool -dbType {{ db_type }} -initSchema
  run_once: true

- name: Verify if hiverserver2 log file exists
  stat:
    path: '{{ hive_log_dir }}/hiveserver2.log'
  register: result

- name: Change hiveserver2 log ownership and permissions
  file:
    path: '{{ hive_log_dir }}/hiveserver2.log'
    owner: '{{ hive_user }}'
    group: '{{ hadoop_group }}'
    mode: '0644'
  when: result.stat.exists

